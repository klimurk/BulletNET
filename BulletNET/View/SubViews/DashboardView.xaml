<UserControl x:Class="BulletNET.View.SubViews.DashboardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
    xmlns:converters="clr-namespace:BulletNET.Infrastructure.Converters.Converters"
    xmlns:ext="clr-namespace:BulletNET.Infrastructure.Common"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    mc:Ignorable="d"
    d:DesignHeight="1030" d:DesignWidth="1720">
    <UserControl.Resources>
        <converters:MainBoardSNConverter x:Key="MainBoardSNConverter" />
        <converters:RadarBoardConverter x:Key="RadarBoardConverter" />
        <converters:DebugConverter x:Key="DebugConverter" />
    </UserControl.Resources>

    <Grid>

        <md:DialogHost x:Name="m_dialogHost" Identifier="dialogHost">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>

                <md:Card Grid.Column="0" Background="WhiteSmoke" Padding="10" BorderThickness="0" BorderBrush="Gray" Margin="0 0 10 0">
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Padding="5 10 ">
                                <TextBlock Text="Test Groups" Height="Auto" VerticalAlignment="Center" FontSize="16" Foreground="Gray" FontWeight="SemiBold" />
                            </Border>
                            <ListBox Grid.Row="1" ItemsSource="{Binding TestGroupsView}" SelectedItem="{Binding TestGroupSelected}" Style="{StaticResource MaterialDesignChoiceChipListBox}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Button  VerticalAlignment="Center" Background="{x:Null}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsPassed}" Value="False">
                                                                <Setter Property="Content" Value="{md:PackIcon Kind=CancelCircleOutline, Size=18}" />
                                                                <Setter Property="Foreground" Value="Red" />
                                                                <Setter Property="Margin" Value="0 0 5 0" />
                                                                <Setter Property="Width" Value="18" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsPassed}" Value="True">
                                                                <Setter Property="Content" Value="{md:PackIcon Kind=Check}" />
                                                                <Setter Property="Foreground" Value="Teal" />
                                                                <Setter Property="Margin" Value="0 0 5 0" />
                                                                <Setter Property="Width" Value="18" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <TextBlock  Text="{Binding Name}" Margin="0 0 10 0" VerticalAlignment="Center" />
                                            <mde:BusyOverlay   VerticalAlignment="Center" Style="{StaticResource MaterialBusyOverlayLinear }" Background="{x:Null}"  Foreground="WhiteSmoke" Width="50"  IsBusy="{Binding IsBusy}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignChoiceChipListBoxItem}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Background" Value="#ff5252" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPassed}" Value="True">
                                                <Setter Property="Background" Value="ForestGreen" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>
                        <Grid
                            Grid.Row="1"
                            Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Margin="5 10">
                                <TextBlock Text="Test Actions" Height="Auto" VerticalAlignment="Center" FontSize="16" Foreground="Gray" FontWeight="SemiBold" />
                            </Border>
                            <DataGrid
                                Grid.Row="1"
                                Style="{StaticResource MaterialDesignDataGrid}"
                                ItemsSource="{Binding TestActionsView}"
                                SelectedItem="{Binding TestActionSelected}"
                                AutoGenerateColumns="False"
                                CanUserReorderColumns="False" CanUserResizeColumns="True"
                                CanUserSortColumns="False"
                                HeadersVisibility="Column"
                                CanUserResizeRows="False" IsReadOnly="True"
                                VerticalScrollBarVisibility="Visible"
                                EnableRowVirtualization="True"
                                FontWeight="Medium"  FontSize="14">
                                <i:Interaction.Behaviors>
                                    <ext:ScrollIntoViewBehavior />
                                </i:Interaction.Behaviors>
                                <DataGrid.Background>
                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" />
                                </DataGrid.Background>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="2*" Header="Name" IsReadOnly="True" Binding="{Binding Name}" />
                                    <DataGridTextColumn Width="*" Header="Minimum" IsReadOnly="True" Binding="{Binding Minimum, StringFormat=\{0:F\}}" />
                                    <DataGridTextColumn Width="*" Header="Maximum" IsReadOnly="True" Binding="{Binding Maximum, StringFormat=\{0:F\}}" />
                                </DataGrid.Columns>
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Setter Property="Background" Value="White" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPassed, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="Background" Value="ForestGreen" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPassed, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                <Setter Property="Background" Value="#ff5252" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsRunning, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="Background" Value="Yellow" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                            </DataGrid>
                        </Grid>

                        <Button Content="Read Sequence File" Grid.Row="2" Margin="0 20 0 0"  Style="{StaticResource MaterialDesignRaisedButton}" Foreground="White" Command="{Binding ReadSequenceFileCommand}" />
                    </Grid>
                </md:Card>
                <md:Card Grid.Column="1" Background="WhiteSmoke" Padding="10" BorderThickness="0" BorderBrush="Gray" Margin="10 0 0 0">

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Margin="0 0 0 20">
                            <TextBox
                                md:HintAssist.Hint="Radar Serial Number"
                                IsEnabled="{Binding RadarBoardIsEnabled}"
                                ext:FocusExtension.IsFocused="{Binding IsRadarFocused}"
                                Margin="0 0 0 10"
                                Text="{Binding SerialNumberRadar, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                                        <Setter Property="BorderBrush" Value="Teal" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RadarBoardConverter}}" Value="False">
                                                <Setter Property="BorderBrush" Value="#ff5252" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox
                                md:HintAssist.Hint="Board Serial Number"
                                IsEnabled="{Binding MainBoardIsEnabled}"
                                ext:FocusExtension.IsFocused="{Binding IsBoardFocused}"
                                Text="{Binding SerialNumberBoard, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 0 10">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                                        <Setter Property="BorderBrush" Value="Teal" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self},UpdateSourceTrigger=PropertyChanged, Converter={StaticResource MainBoardSNConverter}}" Value="False">
                                                <Setter Property="BorderBrush" Value="#ff5252" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Grid.Row="1">
                            <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
                                <ToggleButton  Style="{StaticResource MaterialDesignSwitchDarkToggleButton}" IsChecked="{Binding IsWithouDatabase}" />
                                <TextBlock Margin="10 0 0 0" Text="Without database" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
                                <ToggleButton Style="{StaticResource MaterialDesignSwitchDarkToggleButton}" IsChecked="{Binding IsAutoStart}" />
                                <TextBlock Margin="10 0 0 0" Text="Autostart" />
                            </StackPanel>
                        </StackPanel>
                        <Button  Grid.Row="2"  Command="{Binding StartSequenceCommand}" Foreground="White">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedAccentButton}">
                                    <Setter Property="Content" Value="Start Sequence" />
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </md:Card>

                <md:Card Grid.Row="1" Grid.ColumnSpan="2" Background="WhiteSmoke" Padding="15 0" BorderThickness="0" BorderBrush="Gray" Margin="0 10 0 0">

                    <UniformGrid Columns="4" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Bluetooth" VerticalAlignment="Center" Margin="0 0 5 0" />
                            <Button Content="{md:PackIcon Kind=BluetoothConnected, Size=10}" Height="20" Width="20" Foreground="White">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                        <Setter Property="Background" Value="#ff5252" />
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Command" Value="{Binding BluetoothConnectCommand}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsBluetoothConnected}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                                <Setter Property="Background" Value="Teal" />
                                                <Setter Property="Command" Value="{x:Null}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="PicoScope" VerticalAlignment="Center" Margin="0 0 5 0" />
                            <Button Content="P" Height="20" Width="20" FontSize="10" Foreground="White">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                        <Setter Property="Background" Value="#ff5252" />
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Command" Value="{Binding PicoConnectCommand}" />
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding IsPicoConnected}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                                <Setter Property="Background" Value="Teal" />
                                                <Setter Property="Command" Value="{x:Null}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Quido" VerticalAlignment="Center" Margin="0 0 5 0" />
                            <Button Content="Q" Height="20" Width="20" FontSize="10" Foreground="White">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Background" Value="#ff5252" />
                                        <Setter Property="Command" Value="{Binding QuidoConnectCommand}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsQuidoConnected}" Value="True">
                                                <Setter Property="Background" Value="Teal" />
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                                <Setter Property="Command" Value="{x:Null}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Manson" VerticalAlignment="Center" Margin="0 0 5 0" />
                            <Button Content="M" Height="20" Width="20" FontSize="10" Foreground="White">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Background" Value="#ff5252" />
                                        <Setter Property="Command" Value="{Binding MansonConnectCommand}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMansonConnected}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                                <Setter Property="Background" Value="Teal" />
                                                <Setter Property="Command" Value="{x:Null}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </UniformGrid>
                </md:Card>
            </Grid>
        </md:DialogHost>
    </Grid>
</UserControl>